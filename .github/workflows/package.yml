name: Package Templates
on:
  workflow_dispatch:
  push:
    paths:
      - 'diagrams/**'

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Package
        run: sh package.sh

      - name: Get Change
        id: get_change
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          CHANGED_FILES=$(git diff --name-only $LATEST_TAG HEAD -- diagrams)
          if [ -z "$CHANGED_FILES" ]; then
            echo "list=No diagram changed" >> $GITHUB_OUTPUT
            echo "No diagram changed"
          else
            CHANGED_LIST=$(echo "$CHANGED_FILES" | xargs -n 1 basename | awk '{print "- [`" $0 "`](diagrams/" $0 ")"}' | sort)
            {
              echo 'list<<EOF'
              echo "$CHANGED_LIST"
              echo 'EOF'
            } >> $GITHUB_OUTPUT
            echo "$CHANGED_LIST"
          fi

      - name: Create Release
        id: create_release
        uses: BrandonStudio/tag-and-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            # Release v${{ github.run_number }}
            **Changes since last release:**
            ${{ steps.get_change.outputs.list }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in $(find .release -type f); do
            echo "Uploading $file"
            curl \
              -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "${{ steps.create_release.outputs.upload_url }}=$(basename $file)"
          done
